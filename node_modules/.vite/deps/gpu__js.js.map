{
  "version": 3,
  "sources": ["../../gpu.js/dist/gpu-browser.js"],
  "sourcesContent": ["/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.16.0\n * @date Wed Nov 16 2022 15:48:37 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2022 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    let pixelsData;\n    if (media.constructor === ImageData) {\n      pixelsData = media.data;\n    } else {\n      ctx.drawImage(media, 0, 0, width, height);\n      pixelsData = ctx.getImageData(0, 0, width, height).data;\n    }\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'OffscreenCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'ImageBitmap': 'Array(4)',\n  'ImageData': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'OffscreenCanvas':\n      case 'HTMLImage':\n      case 'ImageBitmap':\n      case 'ImageData':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'OffscreenCanvas':\n          case 'HTMLImage':\n          case 'ImageBitmap':\n          case 'ImageData':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'OffscreenCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'ImageBitmap': 'sampler2D',\n  'ImageData': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGLKernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGLKernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/array2\":41,\"./kernel-value/array3\":42,\"./kernel-value/array4\":43,\"./kernel-value/boolean\":44,\"./kernel-value/dynamic-html-image\":45,\"./kernel-value/dynamic-html-video\":46,\"./kernel-value/dynamic-memory-optimized-number-texture\":47,\"./kernel-value/dynamic-number-texture\":48,\"./kernel-value/dynamic-single-array\":49,\"./kernel-value/dynamic-single-array1d-i\":50,\"./kernel-value/dynamic-single-array2d-i\":51,\"./kernel-value/dynamic-single-array3d-i\":52,\"./kernel-value/dynamic-single-input\":53,\"./kernel-value/dynamic-unsigned-array\":54,\"./kernel-value/dynamic-unsigned-input\":55,\"./kernel-value/float\":56,\"./kernel-value/html-image\":57,\"./kernel-value/html-video\":58,\"./kernel-value/integer\":60,\"./kernel-value/memory-optimized-number-texture\":61,\"./kernel-value/number-texture\":62,\"./kernel-value/single-array\":63,\"./kernel-value/single-array1d-i\":64,\"./kernel-value/single-array2d-i\":65,\"./kernel-value/single-array3d-i\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":59}],41:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray2\n};\n},{\"./index\":59}],42:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray3\n};\n},{\"./index\":59}],43:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray4\n};\n},{\"./index\":59}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":59}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":57}],46:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":45}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":62}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":63}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":64}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":65}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":66}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":59}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],58:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":57}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":59}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":61}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGL2KernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGL2KernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/array2\":75,\"./kernel-value/array3\":76,\"./kernel-value/array4\":77,\"./kernel-value/boolean\":78,\"./kernel-value/dynamic-html-image\":80,\"./kernel-value/dynamic-html-image-array\":79,\"./kernel-value/dynamic-html-video\":81,\"./kernel-value/dynamic-memory-optimized-number-texture\":82,\"./kernel-value/dynamic-number-texture\":83,\"./kernel-value/dynamic-single-array\":84,\"./kernel-value/dynamic-single-array1d-i\":85,\"./kernel-value/dynamic-single-array2d-i\":86,\"./kernel-value/dynamic-single-array3d-i\":87,\"./kernel-value/dynamic-single-input\":88,\"./kernel-value/dynamic-unsigned-array\":89,\"./kernel-value/dynamic-unsigned-input\":90,\"./kernel-value/float\":91,\"./kernel-value/html-image\":93,\"./kernel-value/html-image-array\":92,\"./kernel-value/html-video\":94,\"./kernel-value/integer\":95,\"./kernel-value/memory-optimized-number-texture\":96,\"./kernel-value/number-texture\":97,\"./kernel-value/single-array\":98,\"./kernel-value/single-array1d-i\":99,\"./kernel-value/single-array2d-i\":100,\"./kernel-value/single-array3d-i\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueArray2 } = require('../../web-gl/kernel-value/array2');\n\nclass WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray2\n};\n},{\"../../web-gl/kernel-value/array2\":41}],76:[function(require,module,exports){\nconst { WebGLKernelValueArray3 } = require('../../web-gl/kernel-value/array3');\n\nclass WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray3\n};\n},{\"../../web-gl/kernel-value/array3\":42}],77:[function(require,module,exports){\nconst { WebGLKernelValueArray4 } = require('../../web-gl/kernel-value/array4');\n\nclass WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray4\n};\n},{\"../../web-gl/kernel-value/array4\":43}],78:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":44}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":92}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":80}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":47}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":48}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":98}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":99}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":100}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":101}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":54}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":55}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":57}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":93}],95:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    if ('nodeName' in value) {\n      switch (value.nodeName) {\n        case 'IMG':\n          return 'HTMLImage';\n        case 'CANVAS':\n          return 'HTMLImage';\n        case 'VIDEO':\n          return 'HTMLVideo';\n      }\n    } else if (value.hasOwnProperty('type')) {\n      return value.type;\n    } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n      return 'OffscreenCanvas';\n    } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n      return 'ImageBitmap';\n    } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n      return 'ImageData';\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n"],
  "mappings": "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E,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,MAAK,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,KAAI,MAAK,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAA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",
  "names": ["define", "module", "exports", "i", "r", "n", "require", "global", "TokenType", "name", "Position", "SourceLocation", "Parser", "parse", "parseExpressionAt", "tokenizer", "value", "ref", "Scope", "Node", "TokContext", "RegExpValidationState", "Token", "source", "argumentNames", "ast", "declaration", "subKernels", "gl", "features", "Kernel", "result"]
}
